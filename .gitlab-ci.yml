stages:
  - clone
  - build
  - push

variables:
  DOCKERIO_MIRROR: hub.wuhoo.xyz
  MAIN_BRANCH: main
  V2_BRANCH: v2

.clone:
  stage: clone
  image:
    name: docker.io/bitnami/git:2.43.0-debian-11-r2
  before_script:
  script:
    - rm -rf ./pixivfe-${MAIN_BRANCH}/ ./pixiv-${V2_BRANCH}/
    - git clone -b ${TARGET_BRANCH} --single-branch "https://codeberg.org/VnPower/pixivfe.git" pixivfe-${TARGET_BRANCH}
  artifacts:
    untracked: true
    expire_in: 1 day
    when: on_success

clone:main:
  extends: .clone
  before_script:
    - export TARGET_BRANCH="${MAIN_BRANCH}"
  artifacts:
    paths:
      - pixivfe-${MAIN_BRANCH}/

clone:v2:
  extends: .clone
  before_script:
    - export TARGET_BRANCH="${V2_BRANCH}"
  artifacts:
    paths:
      - pixivfe-${V2_BRANCH}/

.build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --registry-mirror "${DOCKERIO_MIRROR}"
      --cache=true
      --cache-repo "${CI_REGISTRY_IMAGE}/build-cache"
      --cache-ttl 168h0m0s
      --context "${CI_PROJECT_DIR}/pixivfe-${TARGET_BRANCH}"
      --dockerfile "${CI_PROJECT_DIR}/pixivfe-${TARGET_BRANCH}/Dockerfile"
      --destination=image
      --no-push
      --tarPath image-${TARGET_BRANCH}.tar
  artifacts:
    untracked: false
    expire_in: 1 day
    when: on_success

build:main:
  extends: .build
  before_script:
    - export TARGET_BRANCH="${MAIN_BRANCH}"
  needs:
    - clone:main
  artifacts:
    untracked: false
    paths:
      - image-${MAIN_BRANCH}.tar

build:v2:
  extends: .build
  before_script:
    - export TARGET_BRANCH="${V2_BRANCH}"
  needs:
    - clone:v2
  artifacts:
    untracked: false
    paths:
      - image-${V2_BRANCH}.tar

.push:
  stage: push
  image:
    name: gcr.io/go-containerregistry/crane/debug:v0.15.2
    entrypoint: [""]
  script:
    - crane auth login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - crane push image-${TARGET_BRANCH}.tar ${CI_REGISTRY_IMAGE}:${TARGET_BRANCH}
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

push:main:
  extends: .push
  before_script:
    - export TARGET_BRANCH="${MAIN_BRANCH}"
  needs:
    - build:main

push:v2:
  extends: .push
  before_script:
    - export TARGET_BRANCH="${V2_BRANCH}"
  needs:
    - build:v2
